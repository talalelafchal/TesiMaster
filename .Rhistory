library("ggplot2")
mydata = read.csv("~/RDirectory/tweets.csv")
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot")
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot",postion="dodge")
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot"
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot")
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot")
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot",position=position_identity())
ggplot() +
coord_cartesian() +
layer( data=mydata, mapping=aes(x=time, y=random), stat="boxplot", geom="boxplot",position=position_identity())
name = test.csv
name = "test.csv"
strsplit(name,".")[1]
strsplit(name,".")
"Talal" == "Talal"
"Talal" == "talal"
"Talal" == "Talal"
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
p1 = ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(heapSize), y=time), stat="boxplot", geom="boxplot", position="dodge")
p2 = ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(opt), y=time), stat="boxplot", geom="boxplot", position="dodge")
p1
p2
library(Hmisc)
install.packages('Hmisc')
library(Hmisc)
library(Hmisc)
leopard = c(
33, 27, 20, 42, 31, 25, 14, 32, 29, 26, 30, 26, 24, 48, 22, 41, 35, 31, 20, 22, 29, 36, 29, 36, 20, 32, 17, 51, 29, 40, 18, 7, 28, 22, 31, 34, 55, 32, 34, 34, 39, 23, 27, 26, 34, 3, 23, 28, 16, 49
)
snowLeopard = c(
34, 25, 36, 42, 34, 28, 42, 40, 41, 24, 42, 50, 36, 56, 47, 39, 35, 41, 40, 35, 53, 32, 42, 49, 45, 43, 45, 54, 23, 36, 37, 32, 42, 38, 29, 46, 38, 21, 38, 40, 29, 44, 36, 31, 36, 24, 50, 47, 46, 41
)
options(digits=1)
out <- histbackback(leopard, snowLeopard,
ylab="score (runtime)", main="Bihistogram")
barplot(-out$left, col=rgb(0.8,0.7,0),
horiz=T, space=0, add=T, axes=F)
barplot(out$right, col=rgb(0.7,0.7,0.6),
horiz=T, space=0, add=T, axes=F)
library(plotly)
setwd("/Users/Talal/Tesi/TweetParser")
tweetdata <- read.csv("tweets.csv")
retweetdataWithAbsent <-subset(tweetdata,retweetId>=0)
retweetdataWithoutAbsent  <-subset(tweetdata,retweetId>0)
a <- list(
title = "Day Time",
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
)
b<- list(
title="# Tweets"
)
plot_ly(alpha = 0.6)%>%
add_histogram(x = tweetdata$hour ,type = "histogram", name = "tweet") %>%
add_histogram(x = retweetdataWithAbsent$hour ,type = "histogram", name = "retweet Absent") %>%
add_histogram(x = retweetdataWithoutAbsent$hour ,type = "histogram", name = "retweet") %>%
layout(xaxis = a, yaxis = b,barmode = "overlay",title="2013-05-14")
#sgsgs
View(retweetdataWithAbsent)
View(retweetdataWithoutAbsent)
g=plotly( x= retweetdataWithoutAbsent$tweetId)
g=plotly( xaxis= retweetdataWithoutAbsent$tweetId)
g=plotly(retweetdataWithoutAbsen, x = retweetdataWithoutAbsent~tweetId)
g=plot_ly(retweetdataWithoutAbsen, x = retweetdataWithoutAbsent~tweetId)
g=plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId)
g
g=plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram')
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram')
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram',exponentformat='none')
c <- list(
autotick = FALSE,
ticks = "outside",
exponentformat = "none"
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram')%>%
layout(xaxis=c)
c <- list(
autotick = FALSE,
ticks = "outside",
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram')%>%
layout(xaxis=c)
c <- list(
exponentformat = "none"
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent~tweetId,type = 'histogram')%>%
layout(xaxis=c)
c <- list(
exponentformat = "none"
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c)
c <- list(
tick0 = 1500,
exponentformat = "none"
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c)
c <- list(
exponentformat = "none"
)
d <- list(
tick0 = 1500
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
d <- list(
tick0 = 1500
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
d <- list(
tick0 = 1500,
dtick = 200
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
d <- list(
tick0 = 0,
dtick = 200
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
d <- list(
tick0 = 0,
)
d <- list(
tick0 = 0
)
plot_ly(retweetdataWithoutAbsent, x = retweetdataWithoutAbsent$tweetId,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
View(retweetdataWithoutAbsent)
l = retweetdataWithoutAbsent$tweetId
l = retweetdataWithoutAbsent$tweetId
l = table(l)
e = as.data.frame.matrix(l)
l.as.data.frame.matrix(l)
e <- as.data.frame.matrix(l)
e <- as.data.frame(l)
View(e)
View(tweetdata)
View(retweetdataWithoutAbsent)
l = retweetdataWithoutAbsent$retweetId
l = table(l)
e <- as.data.frame(l)
View(e)
View(e)
g <- subset(e,Freq>1500)
View(g)
g <- subset(e,Freq>1000)
View(g)
View(g)
plot_ly(g, x = l$g,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
e <- as.data.frame(l)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
plot_ly(g, x = g$l, y = g$Freq ,type = 'histogram')%>%
layout(xaxis=c,yaxis=d)
plot_ly(g, x = g$l, y = g$Freq ,type = 'scatter')%>%
layout(xaxis=c,yaxis=d)
plot_ly(g, x = g$l, y = g$Freq ,type = 'point')%>%
layout(xaxis=c,yaxis=d)
plot_ly(g, x = g$l, y = g$Freq ,type = 'point')%>%
layout(xaxis=c,yaxis=d)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l, y = g$Freq )%>%
layout(xaxis=c,yaxis=d)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l, y = g$Freq )%>%
layout(xaxis=c)
plot_ly(g, x = l, y = g$Freq )%>%
layout(xaxis=c)
l = retweetdataWithoutAbsent$retweetId
s = table(l)
e <- as.data.frame(s)
g <- subset(e,Freq>1000)
plot_ly(g, x = l, y = g$Freq )%>%
layout(xaxis=c)
l = retweetdataWithoutAbsent$retweetId
s = table(l)
l = retweetdataWithoutAbsent$retweetId
l = table(l)
e <- as.data.frame(s)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l, y = g$Freq )%>%
layout(xaxis=c)
View(g)
e <- as.data.frame(s)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l, y = g$Freq )%>%
plot_ly(g, x = g$l, y = g$Freq,style="scatter" )
plot_ly(g, x = g$l, y = g$Freq,style="scatter" )
plot_ly(g, x = g$l, y = g$Freq,type="scatter" )
plot_ly(g, x = g$l,type="scatter" )
l = retweetdataWithoutAbsent$retweetId
f = l.as.string(l)
f = l.as.character(l)
as.character(l)
l = retweetdataWithoutAbsent$retweetId
f = as.character(l)
l = table(l)
e <- as.data.frame(s)
g <- subset(e,Freq>1000)
plot_ly(g, x = g$l,type="scatter" )
plot_ly(g, x = as.character(g$l),type="scatter" )
plot_ly(g, x = as.character(g$l), y = g$Freq,type="scatter" )
g <- g[order(Freq),]
g <- g[order(Freq)]
g[with(g, order(Freq)), ]
g->g[with(g, order(Freq)), ]
plot_ly(g, x = as.character(g$l), y = g$Freq,type="scatter" )
plot_ly(g, y = g$Freq,x = as.character(g$l) ,type="scatter" )
View(g)
View(g)
plot_ly(g, y = g$Freq,x = as.character(g$l) ,type="scatter" )
View(g)
g <- subset(e,Freq>500)
plot_ly(g, y = g$Freq,x = as.character(g$l) ,type="scatter" )
e <- as.data.frame(s)
g <- subset(e,Freq>500)
g <- g[order(Freq)]
g->g[with(g, order(Freq)), ]
plot_ly(g, y = g$Freq,x = as.character(g$l) ,type="scatter" )
g->g[with(g, order(Freq)), ]
View(g)
g[with(g, order(Freq)), ]
View(g)
e <- as.data.frame(s)
g <- subset(e,Freq>500,order ="true")
g <- g[order(Freq)]
g[with(g, order(Freq)), ]
plot_ly(g, y = g$Freq,x = as.character(g$l) ,type="scatter" )
View(g)
g <- g[order(g$Freq)]
View(g)
g <- g[order(g~Freq)]
g <- g[order(Freq)]
g <- g[order(Freq),]
g <- g[order(g$Freq),]
s <- g[order(g$Freq),]
View(s)
plot_ly(s, y = s$Freq,x = as.character(s$l) ,type="scatter" )
